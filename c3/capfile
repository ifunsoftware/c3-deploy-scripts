require "capistrano/setup"
require "capistrano/deploy"


set :stage, :production

server "node0.c3.ifunsoftware.com", user: "aphreet", roles: %w{backend}
server "node1.c3.ifunsoftware.com", user: "aphreet", roles: %w{backend}


namespace :c3 do	
	set :virgo_root, "/opt/local/virgo" 
	set :c3_tmp_dir, "/opt/local/tmp"

	task :stop do
		on roles(:backend) do |host|
  			execute("#{fetch(:virgo_root)}/bin/shutdown.sh")
  			#in 5 seconds test if virgo is still alive and if it is - kill it with fire!
  			execute("sleep 5 && #{fetch(:virgo_root)}/bin/force_shutdown.sh")
  		end
	end

	task :start do
		on roles(:backend) do |host|
  			execute("nohup #{fetch(:virgo_root)}/bin/startup.sh > /dev/null 2>&1 </dev/null &")
		end
	end

	task :cleanup do
		on roles(:backend) do |host|
			execute("rm -rf #{fetch(:c3_tmp_dir)}")
  			execute("mkdir -p #{fetch(:c3_tmp_dir)}")
		end
	end

	task :put_platform do
		on roles(:backend) do |host|
			execute("cd #{fetch(:c3_tmp_dir)} && wget -q 'http://repository.ifunsoftware.com/service/local/artifact/maven/redirect?r=snapshots&g=org.aphreet.c3&a=c3-deploy&v=LATEST' --content-disposition")

			execute("mv #{fetch(:c3_tmp_dir)}/c3-deploy*.jar #{fetch(:c3_tmp_dir)}/c3-deploy.zip")

  			execute("cd #{fetch(:c3_tmp_dir)} && unzip *.zip")
		end
	end

	task :deploy_platform do
		on roles(:backend) do |host|
			execute("rm -f #{fetch(:virgo_root)}/pickup/c3*.plan")
  			execute("rm -f #{fetch(:virgo_root)}/repository/usr/*")
  			execute("cp #{fetch(:c3_tmp_dir)}/server/lib/* #{fetch(:virgo_root)}/repository/usr")
  			execute("cp #{fetch(:c3_tmp_dir)}/server/pickup/c3-all.plan #{fetch(:virgo_root)}/pickup")
		end
	end

	task :put_web do
  		on roles(:backend) do |host|
  			execute("cd #{fetch(:c3_tmp_dir)} && wget -q 'http://repository.ifunsoftware.com/service/local/artifact/maven/redirect?r=snapshots&g=org.aphreet.c3&a=c3webclient&p=war&v=LATEST' --content-disposition")
		end
	end

	task :deploy_web do
		on roles(:backend) do |host|
			execute("rm -f #{fetch(:virgo_root)}/pickup/c3webclient*.war")
			execute("rm -f #{fetch(:virgo_root)}/repository/usr/c3webclient*.war")
			execute("cp #{fetch(:c3_tmp_dir)}/c3webclient*.war #{fetch(:virgo_root)}/repository/usr")
		end
	end

	desc "Updates c3 platform and c3 web to the latest versions from build server"
	task :update_all do
		on roles(:backend), in: :sequence do
			invoke 'c3:cleanup'
			invoke 'c3:put_platform'
			invoke 'c3:put_web'
			invoke 'c3:stop'
			invoke 'c3:deploy_platform'
			invoke 'c3:deploy_web'
			invoke 'c3:start'
		end
	end

	desc "Gathers logs from c3 nodes"
	task :download_logs do
		on roles(:backend) do |host|
			download!("#{fetch(:virgo_root)}/serviceability/logs/", "downloads/log-#{host}", :recursive => true)
		end
	end

	desc "Gathers c3 configuration from nodes"
	task :download_configs do
		on roles(:backend) do |host|
			download!("/home/aphreet/.c3/", "downloads/config-#{host}", :recursive => true)
		end
	end

	task :full_cleanup do
		on roles(:backend), in: :sequence do
			invoke 'c3:stop'
			execute("rm -f #{fetch(:virgo_root)}/repository/usr/*")
			execute("rm -f #{fetch(:virgo_root)}/pickup/*")
			execute("rm -rf #{fetch(:virgo_root)}/work")
			execute("rm -rf #{fetch(:virgo_root)}/serviceability")
		end
	end

end
